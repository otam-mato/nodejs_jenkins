pipeline {
    agent any
    
    environment {
        dockerregistry = 'https://registry.hub.docker.com'
        dockerhuburl = "montcarotte/jenkins_nodejs_app_demo"
        githuburl = "otammato/Jenkins_pipeliline_build_deploy_nodejs_kubernetes"
        dockerhubcrd = 'dockerhub'
    }
 
    tools {nodejs "node"}
 
    stages {
 
        stage('Check out') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/otammato/Jenkins_pipeliline_build_deploy_nodejs_kubernetes.git']])
            }
        }    
        stage('Install dependencies') {
            steps {
                sh 'npm install'
            }
        }
        
        stage('Test app') {
            steps {
                sh 'npm test'
            }
        }
        
        stage('Build image') {
          steps{
            script {
              dockerImage = docker.build(dockerhuburl + ":$BUILD_NUMBER")
            }
          }
        }
        
        stage('Test image') {
            steps {
                script {
                    // Start the Docker container
                    def container = docker.image("${dockerhuburl}:$BUILD_NUMBER").run("-d")
                    try {
                        // Wait for the container to start running
                        sh 'sleep 10'
                        
                        // Run the test command outside the container
                        sh "docker exec ${container.id} npm test"
                    } finally {
                        // Stop the container
                        container.stop()
                    }
                }
            }
        }
        
        stage('Deploy image') {
          steps{
            script {
              docker.withRegistry(dockerregistry, dockerhubcrd ) {
                dockerImage.push("${env.BUILD_NUMBER}")
                dockerImage.push("latest")
              }
            }
          }
        }
 
        stage('Remove image') {
          steps{
            sh "docker rmi $dockerhuburl:$BUILD_NUMBER"
          }
        }
    }
}
